#This makefile was generated by 'mkmake'

G960ROOT= /afs/cs.cmu.edu/project/vcnectar/gnu960

TOOLS= toolib gdbbfd hdil hdilcomm libbfd libccinf libdwarf liberty libld960 readline binutils cvt960 gas960 gcc960 gcdm960 gcov960 gdb960 gdmp960 ghist960 gld960 gmpf960 gmung960 grom960 gver960 mpp960 rom960 mondb prnieee ccdmp960
LIBS= libc libm libmstub libafp libfp libqf libll librom libhis libepcx libcy libmon

# START OF PROTOMAKE.

# Essential for System V Unix, doesn't hurt elsewhere
SHELL		= /bin/sh
SNAPSHOT	=
LIB_BUILD	= build
INSTALL_ALL	= TRUE
IC		= gcc960

MK	= make -f $(MFILE) LIB_BUILD=$(LIB_BUILD) HOST=$(HOST) CLEAN=$(CLEAN) SNAPSHOT=$(SNAPSHOT) DOSXP=$(DOSXP) DOSXN=$(DOSXN) G960BASE=$(G960BASE) G960ROOT=$(G960ROOT) LIB_DEBUG=$(LIB_DEBUG) LIB_INSTALL=$(LIB_INSTALL) INSTALL_ALL=$(INSTALL_ALL) IC=$(IC)

# To rebuild tool(s) without first removing all object files (e.g., to
# continue after fixing a syntax error), invoke as "make <target> CLEAN="
#
CLEAN	= clean

all:	tools libs
tools:	$(TOOLS)

libs:	$(LIBS)
	@if test -z "$(LIB_INSTALL)"; then\
		$(G960ROOT)/admin/mklinks $(G960ROOT);\
	fi

bfd:	libbfd binutils gcdm960 gdmp960 gld960 gmpf960 gmung960 grom960 rom960 ghist960

ats:	libbfd toolib libld960 libccinf libld960 gas960 binutils gld960 gdmp960 rom960 cvt960 gcov960 mpp960 ghist960 gmung960 grom960

gdb: 	gdbbfd readline liberty libdwarf hdil hdilcomm toolib gdb960

monats:	hdil hdilcomm mondb

# END OF PROTOMAKE.

toolib: ;	$(MK) tool DIR=toolib
gdbbfd: ;	$(MK) tool DIR=gdbbfd
hdil: ;	$(MK) tool DIR=hdil
hdilcomm: ;	$(MK) tool DIR=hdilcomm
libbfd: ;	$(MK) tool DIR=libbfd
libccinf: ;	$(MK) tool DIR=libccinf
libdwarf: ;	$(MK) tool DIR=libdwarf
liberty: ;	$(MK) tool DIR=liberty
libld960: ;	$(MK) tool DIR=libld960
readline: ;	$(MK) tool DIR=readline
binutils: ;	$(MK) tool DIR=binutils
cvt960: ;	$(MK) tool DIR=cvt960
gas960: ;	$(MK) tool DIR=gas960
gcc960: ;	$(MK) tool DIR=gcc960
gcdm960: ;	$(MK) tool DIR=gcdm960
gcov960: ;	$(MK) tool DIR=gcov960
gdb960: ;	$(MK) tool DIR=gdb960
gdmp960: ;	$(MK) tool DIR=gdmp960
ghist960: ;	$(MK) tool DIR=ghist960
gld960: ;	$(MK) tool DIR=gld960
gmpf960: ;	$(MK) tool DIR=gmpf960
gmung960: ;	$(MK) tool DIR=gmung960
grom960: ;	$(MK) tool DIR=grom960
gver960: ;	$(MK) tool DIR=gver960
mpp960: ;	$(MK) tool DIR=mpp960
rom960: ;	$(MK) tool DIR=rom960
mondb: ;	$(MK) tool DIR=mondb
prnieee: ;	$(MK) tool DIR=prnieee
ccdmp960: ;	$(MK) tool DIR=ccdmp960

libc: ;	$(MK) library DIR=lib$(SLASH)libc
libm: ;	$(MK) library DIR=lib$(SLASH)libm
libmstub: ;	$(MK) library DIR=lib$(SLASH)libmstub
libafp: ;	$(MK) library DIR=lib$(SLASH)libafp
libfp: ;	$(MK) library DIR=lib$(SLASH)libfp
libqf: ;	$(MK) library DIR=lib$(SLASH)libqf
libll: ;	$(MK) library DIR=lib$(SLASH)libll
librom: ;	$(MK) library DIR=lib$(SLASH)librom
libhis: ;	$(MK) library DIR=lib$(SLASH)libhis
libepcx: ;	$(MK) library DIR=lib$(SLASH)libepcx
libcy: ;	$(MK) library DIR=lib$(SLASH)libcy
libmon: ;	$(MK) library DIR=lib$(SLASH)libmon

G960BASE= $(G960ROOT)/$(HOST)
MFILE	= Makefile
SNAPSHOT=
SLASH=/

# Build a single tool or library.  "Subroutine" target, not to be invoked
# directly.  "Arguments" passed in:
#	DIR	Name of src subdirectory
#	HOST	Name of host
#	CLEAN	"clean" cleans before/after building; "" skips cleaning
#
# Note that two environment variables are set in the invocation of the lower-
# level makefile (G960BASE and PATH) so the GNU tools (hopefully already built)
# can be used in building the libraries.  The other G960 environment variables
# are turned off so they don't over-ride G960BASE.  G960BASE is also passed as
# a make macro so the lower-level makefile can know where to install the tools
# or libraries it builds.
# 
tool:
	@case $(HOST)y in \
	y) \
	   echo "Specify 'HOST=' on make invocation";\
	   exit 1 ;; \
	esac
	@echo "=============== $(DIR): install ==============="
	@if test "$(CLEAN)" != "" ; then \
		cd src/$(DIR)/$(HOST) && make $(CLEAN); \
	fi
	cd src/$(DIR)/$(HOST) && \
	G960BASE=$(G960BASE) PATH="$(G960BASE)/bin:$$PATH" \
	G960BIN= G960LIB= G960INC= G960AS= G960CPP= G960CC1= \
		make SNAPSHOT=$(SNAPSHOT) G960BASE=$(G960BASE) install $(CLEAN)

library:
	@case $(HOST)y in \
	y) \
	   echo "Specify 'HOST=' on make invocation";\
	   exit 1 ;; \
	esac
	@echo "=============== $(DIR): install ==============="
	@if test "$(CLEAN)" != "" ; then \
		cd src/$(DIR)/$(LIB_BUILD) && make $(CLEAN); \
	fi
	cd src/$(DIR)/$(LIB_BUILD) && \
	G960BASE=$(G960BASE) PATH="$(G960BASE)/bin:$$PATH" \
	G960BIN= G960LIB= G960INC= G960AS= G960CPP= G960CC1= \
		make SNAPSHOT=$(SNAPSHOT) G960BASE=$(G960BASE) LIB_DEBUG=$(LIB_DEBUG) LIB_INSTALL=$(LIB_INSTALL) INSTALL_ALL=$(INSTALL_ALL) IC=$(IC) install $(CLEAN)

clean:
	-@cwd=`pwd`; \
	for T in $(TOOLS); do \
		echo "=============== $$T ==============="; \
		cd src/$$T/$(HOST); make clean; cd $$cwd; \
	done; \
	for L in $(LIBS) ; do \
		echo "=============== $$L ==============="; \
		cd src/lib/$$L/$(LIB_BUILD); make clean; cd $$cwd; \
	done

prerelease:
	echo "Please use new admin tool mkprerelease"
	exit 1
