#*******************************************************************************
#*
#* Copyright (c) 1993, 1994 Intel Corporation
#*
#* Intel hereby grants you permission to copy, modify, and distribute this
#* software and its documentation.  Intel grants this permission provided
#* that the above copyright notice appears in all copies and that both the
#* copyright notice and this permission notice appear in supporting
#* documentation.  In addition, Intel grants this permission provided that
#* you prominently mark as "not part of the original" any modifications
#* made to this software or documentation, and that the name of Intel
#* Corporation not be used in advertising or publicity pertaining to
#* distribution of the software or the documentation without specific,
#* written prior permission.
#*
#* Intel Corporation provides this AS IS, WITHOUT ANY WARRANTY, EXPRESS OR
#* IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY
#* OR FITNESS FOR A PARTICULAR PURPOSE.  Intel makes no guarantee or
#* representations regarding the use of, or the results of the use of,
#* the software and documentation in terms of correctness, accuracy,
#* reliability, currentness, or otherwise; and you rely on the software,
#* documentation and results solely at your own risk.
#*
#* IN NO EVENT SHALL INTEL BE LIABLE FOR ANY LOSS OF USE, LOSS OF BUSINESS,
#* LOSS OF PROFITS, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES
#* OF ANY KIND.  IN NO EVENT SHALL INTEL'S TOTAL LIABILITY EXCEED THE SUM
#* PAID TO INTEL FOR THE PRODUCT LICENSED HEREUNDER.
#*
#******************************************************************************/
# This makefile is for Microsoft C 7.0.
#
# This makefile has been tested with Microsoft's "nmake" make utility.
# It's ability to work with other make utilities depends upon how the
# make handles environment variables -- i.e., CL.
#
# In order for this makefile to work, you MUST have the environment
# variable "CL" set prior to executing nmake!  If you don't already
# have CL set, then you can set it by typing the following command:
# 	SET CL=-nologo
#

.SUFFIXES:
.SUFFIXES: .obj .asm .c

TARG_FULL_NAME = "MONDB"

HDIL_INC       = ..\..\hdil\common
HDIL_LIB       = ..\..\hdil\common
HDIL_COMM_LIB  = ..\..\hdilcomm\common

#
## Compiler flags (cl.exe)
#
CC       = cl                # Microsoft C compiler

MEMMODEL = M  # small memory model.
OPT      = -Od  # Disable all optimization.
#ANSI     = -Za  # Enforce ANSI compatibility.
#CV       = -Zi  # Codeview symbolic information.

#DEBUG   = -Ge    # -Ge is Stack probes on.
DEBUG    = -Gs    # -Gs is Stack probes off.
DEFS     = -DHOST -DMSDOS $(DEBUG)

#
CL = -A$(MEMMODEL) -W3 $(ANSI) $(CV) $(OPT) $(DEFS) -I$(HDIL_INC)

.c.obj:
	$(CC) -c $<

OBJ = mondb.obj version.obj

mondb.exe: verstr.exe $(OBJ) _version
	$(CC) -o mondb $(OBJ) $(HDIL_LIB)\hdil.lib \
		$(HDIL_COMM_LIB)\hdilcomm.lib -link /stack:10000
    del version.c

mondb.o: $(HDIL_INC)\hdil.h $(HDIL_INC)\hdi_com.h \
	$(HDIL_INC)\common.h $(HDIL_INC)\hdi_regs.h  \
	$(HDIL_INC)\hdi_errs.h $(HDIL_INC)\hdi_brk.h \
	$(HDIL_INC)\hdi_arch.h $(HDIL_INC)\hdi_stop.h

version.obj: FORCE
	echo char gnu960_ver[]=	 	 > version.c
	verstr $(TARG_FULL_NAME) _version	>> version.c
	$(CC) -c version.c

# Useful to pick up changed hdi libraries.
FORCE:

verstr.exe: verstr.c
    $(CC) verstr.c

clean:
    del *.obj 
    del verster.exe
    del mondb.exe
    del version.c
