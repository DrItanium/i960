#The next line was generated by 'mkmake'
HOST=sun4


#/*(c***************************************************************************
#*
#* Copyright (c) 1990, 1991, 1992, 1993 Intel Corporation
#* 
#* Intel hereby grants you permission to copy, modify, and distribute this
#* software and its documentation.  Intel grants this permission provided
#* that the above copyright notice appears in all copies and that both the
#* copyright notice and this permission notice appear in supporting
#* documentation.  In addition, Intel grants this permission provided that
#* you prominently mark as "not part of the original" any modifications
#* made to this software or documentation, and that the name of Intel
#* Corporation not be used in advertising or publicity pertaining to
#* distribution of the software or the documentation without specific,
#* written prior permission.
#* 
#* Intel Corporation provides this AS IS, WITHOUT ANY WARRANTY, EXPRESS OR
#* IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY
#* OR FITNESS FOR A PARTICULAR PURPOSE.  Intel makes no guarantee or
#* representations regarding the use of, or the results of the use of,
#* the software and documentation in terms of correctness, accuracy,
#* reliability, currentness, or otherwise; and you rely on the software,
#* documentation and results solely at your own risk.
#* 
#* IN NO EVENT SHALL INTEL BE LIABLE FOR ANY LOSS OF USE, LOSS OF BUSINESS,
#* LOSS OF PROFITS, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES
#* OF ANY KIND.  IN NO EVENT SHALL INTEL'S TOTAL LIABILITY EXCEED THE SUM
#* PAID TO INTEL FOR THE PRODUCT LICENSED HEREUNDER.
#* 
#***************************************************************************c)*/

#*****************************************************************************
# Makefile for libld960.a - COFL (COFF interface Library)
#
#	$Id: Makefile,v 1.23 1995/07/27 00:41:31 rdsmithx Exp $
#*****************************************************************************

# Essential under System V, harmless elsewhere
SHELL = /bin/sh

TARG	= libld960.a
IDIR	= ../../include
LDIR	= $(G960BASE)/lib
CFLAGS	= $(OPT) -I$(IDIR) $(HOSTDEFS)

#-----------  DEFAULTS  ---------------------------
O	= o
RM	= rm -f
CP	= cp
OPT	= -g
IOPT	= -O
HOSTNM	= \"$(HOST)\"
AR	= ar cvr $(TARG) $(OBJS)
RANLIB	= ranlib
DEST	= $(G960BASE)/lib
INCDEST	= $(G960BASE)/lib
IINCDEST = $(G960BASE)/include
INCFILES = ../../include/ar.h ../../include/coff.h ../../include/ldfcn.h

#		Uncomment for gcc960
#__gcc960__##
#__gcc960__## To test mpp960 as a 960 application, first build it: make make HOST=gcc960
#__gcc960__## mkdir pdb; make OPT=-O4_1 ...
#__gcc960__##
#__gcc960__## Run the test suite in the usual manner, diagnoising failures.
#__gcc960__##
#__gcc960__#OMFFLAG  = -Fcoff
#__gcc960__#TARGET   = tc
#__gcc960__#CC       = gcc960 $(OMFFLAG) -D__GNU960C -Tm$(TARGET) -fsigned-char -mic-compat -Z pdb
#__gcc960__#LD       = gld960
#__gcc960__#LINKC    = $(LD) -ACA gcc960$(TARGET).ld -c -lmg -lromg -lhg -lqfg -Z pdb
#__gcc960__#ROMIT    = rom960 gcc960$(TARGET)
#__gcc960__#HOSTDEFS = -D__GCC960 -UNEED_MEMORY_H
#__gcc960__#MEMORY_H =
#__gcc960__#AR       = gar960 cvr $(TARG) $(OBJS)
#__gcc960__#ROMIT    = rom960 gcc960$(TARGET)
#-----------------------------------------------------------------------------
# 		Uncomment for system V (i386v).
#__i386v__#RANLIB	= echo >/dev/null
#__i386v__#HOSTDEFS	= -DHOST_SYS=i386_SYSV_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for system V Release 4 (i386vr4).
#__i386vr4__#RANLIB	= echo >/dev/null
#__i386vr4__#HOSTDEFS	= -DHOST_SYS=i386_SYSV_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for NCR System V (68020v).
#__68020v__#RANLIB	= echo >/dev/null
#__68020v__#HOSTDEFS	= -DHOST_SYS=NCR_SYSV_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for RS6000.
#__rs6000__#HOSTDEFS	= -DHOST_SYS=AIX_SYS -DUSG -qchars=signed
#-----------------------------------------------------------------------------
# 		Uncomment for HP9000-300
#__hp9000__#RANLIB	= echo >/dev/null
#__hp9000__#HOSTDEFS	= -DHOST_SYS=HP9000_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for HP9000-700
#__hp700__#RANLIB	= echo >/dev/null
#__hp000__#HOSTDEFS	= -DHOST_SYS=HP9000_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Mac A/UX
#__mac-aux__#RANLIB	= echo >/dev/null
#__mac-aux__#HOSTDEFS	= -DHOST_SYS=MACAUX_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Sun 3
#__sun3__#HOSTDEFS	= -DHOST_SYS=SUN3_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Sun 386i
#__sun386i__#HOSTDEFS	= -DHOST_SYS=SUN3_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Sun 4
HOSTDEFS	= -DHOST_SYS=SUN4_SYS
#-----------------------------------------------------------------------------
#               Uncomment for Solaris on the sun4 (sol-sun4).
#__sol-sun4__#RANLIB	= echo >/dev/null
#__sol-sun4__#HOSTDEFS	= -DHOST_SYS=SOL_SUN4_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Sun 3
#__dec3100__#HOSTDEFS	= -DHOST_SYS=DEC3100_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Vax-Ultrix
#__vax-ultrix__#HOSTDEFS	= -DHOST_SYS=VAX_ULTRIX_SYS
#-----------------------------------------------------------------------------
# 		Uncomment for Apollo 400
#__ap400__#HOSTDEFS	= -DHOST_SYS=APOLLO400_SYS -A nansi
#-----------------------------------------------------------------------------
# 		Uncomment for DOS
#__dos__#TARG		= libld960.lib
#__dos__#O		= obj
#__dos__#RM		= del
#__dos__#CP		= copy
#__dos__#HOSTNM		= "dos"
#				 Metaware can't handle -DHOST=\"xxx\"
#__dos__#HOSTDEFS	= -DHOST_SYS=DOS_SYS -DDOS
#__dos__#I_DIR		= $(IDIR,/=\)
#__dos__#OPT		= -g
#__dos__#IOPT		= -O3
#__dos__#CFLAGS		= -w1 $(OPT) -fsoft -Heol=10 -I$(I_DIR) $(HOSTDEFS)
#__dos__#RANLIB		= @echo
#__dos__#AR		= 386lib $(TARG) -create -twocase @liblst
#__dos__#DEST		=$(G960BASE,/=\)\lib
#__dos__#INCDEST	=$(G960BASE,/=\)\lib
#__dos__#IINCDEST	=$(G960BASE,/=\)\include
#__dos__#INCFILES	= ..\..\include\ar.h ..\..\include\coff.h ..\..\include\ldfcn.h
#__dos__#CC             = HC386
#-----------------------------------------------------------------------------
# 		Uncomment for Windows 95
#__win95__#TARG		= libld960.lib
#__win95__#O		= obj
#__win95__#HOSTDEFS	= -W2 -DWIN95 -DHOST_SYS=DOS_SYS -DDOS
#__win95__#I_DIR		= $(IDIR,/=\)
#__win95__#OPT		= -Zi
#__win95__#IOPT		= -O2
#__win95__#RANLIB		= @echo
#__win95__#AR		= lib /OUT:$(TARG) @liblst.lbc
#__win95__#DEST		=$(G960BASE,/=\)\lib
#__win95__#INCDEST	=$(G960BASE,/=\)\lib
#__win95__#IINCDEST	=$(G960BASE,/=\)\include
#__win95__#INCFILES	= ..\..\include\ar.h ..\..\include\coff.h ..\..\include\ldfcn.h
#__win95__#CC             = CL
#-----------------------------------------------------------------------------


OBJS	= ldaclose.$O ldahread.$O ldaopen.$O ldclose.$O ldfhread.$O \
	  ldgetnam.$O ldlinit.$O ldlitem.$O ldlread.$O ldlseek.$O \
	  ldnlseek.$O ldnrseek.$O ldnshrd.$O ldnsseek.$O ldohseek.$O \
	  ldopen.$O ldrseek.$O ldshread.$O ldsseek.$O ldtbindx.$O \
	  ldtbread.$O ldtbseek.$O sgetl.$O util.$O vercofl.$O

$(TARG): hc.pro liblst.lbc $(OBJS)
	$(RM) $(TARG)
	$(AR)
	$(RANLIB) $(TARG)


liblst.lbc:
#__dos__#	!foreach i $(OBJS)
#__dos__#		echo -add $i >>liblst.lbc
#__dos__#	!end
#__win95__#	!foreach i $(OBJS)
#__win95__#		echo $i >>liblst.lbc
#__win95__#	!end

hc.pro:
#__dos__#       $(CP) $(I_DIR)\sys\hc.pro hc.pro
#__win95__#	@echo

ldaclose.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldahread.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldaopen.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldclose.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldfhread.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldgetnam.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldlinit.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldlitem.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldlread.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldlseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldnlseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldnrseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldnshrd.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldnsseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldohseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldopen.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldrseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldshread.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldsseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldtbindx.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldtbread.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
ldtbseek.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
sgetl.$O	: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h
util.$O		: $(IDIR)/ldfcn.h $(IDIR)/coff.h $(IDIR)/ar.h

#-----------------------------------------------------------------------------
#		'STANDARD' GNU/960 TARGETS BELOW THIS POINT
#-----------------------------------------------------------------------------

VERSTR = echo "	\"$(TARG) `cat _version`, `date`\";"
#__dos__#VERSTR = =$(LDIR)/verstr $(TARG) _version
#__win95__#VERSTR = =$(LDIR)/verstr $(TARG) _version

vercofl.$O: FORCE
	$(RM) vercofl.c
	echo static char cofl_ver[]=	 > vercofl.c
	$(VERSTR) 			>> vercofl.c
	$(CC) $(CFLAGS) -c vercofl.c

FORCE:


# 'G960BASE' should be defined at invocation
# Avoid explicit use of "/" in pathnames, since DOS version needs "\"
install:
	make $(TARG) OPT="$(IOPT)"
	(cd $(DEST); $(RM) $(TARG))
	$(CP) $(TARG) $(DEST)
	(cd $(DEST); $(RANLIB) $(TARG))
	(cd $(INCDEST); $(RM) ar.h; $(RM) coff.h; $(RM) ldfcn.h)
#__dos__#	!foreach INCFILES $(INCFILES)
	$(CP) $(INCFILES) $(INCDEST)
#__dos__#	!end

install_ctools:
	make install INCDEST="$(IINCDEST)"

# Separate lines required in order for DOS version to work
#
clean:
	$(RM) $(TARG)
	$(RM) *.$O
	$(RM) core
	$(RM) liblst.lbc        # for DOS, doesn't hurt anybody else
	$(RM) hc.pro            # for DOS, doesn't hurt anybody else

#-----------------------------------------------------------------------------
# Target to uncomment host-specific lines in this makefile, i.e. lines
# beginning in column 1 with the following string:  #__<hostname>__# .
# Original Makefile is backed up as 'Makefile.old'.
#
# Invoke with:  make make HOST=xxx
#-----------------------------------------------------------------------------
make:
	-@grep -s "^#The next line was generated by 'make make'" Makefile; \
	if test $$? = 0 ; then	\
		echo "Makefile has already been processed with 'make make'";\
		exit 1; \
	elif test $(HOST)x = x ; then \
		echo 'Specify "make make HOST=???"'; \
		exit 1; \
	else \
		mv -f Makefile Makefile.old; \
		echo "#The next line was generated by 'make make'"> Makefile;\
		echo "HOST=$(HOST)"				 >> Makefile; \
		echo						 >> Makefile; \
		sed "s/^#__$(HOST)__#//" < Makefile.old		 >> Makefile; \
		if test $(HOST) = dos; then mv Makefile makefile; fi \
	fi
