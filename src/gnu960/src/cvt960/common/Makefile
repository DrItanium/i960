#-----------------------------------------------------------------------------
#			Makefile for cvt960
#
# $Id: Makefile,v 1.36 1995/07/27 00:43:08 rdsmithx Exp $
#-----------------------------------------------------------------------------

# Essential under System V, harmless elsewhere
SHELL	= /bin/sh

TARG	= cvt960
IDIR	= ../../include
LDIR	= $(G960BASE)/lib
CFLAGS	= $(OPT) -I$(IDIR) $(HOSTDEFS) -DCVT960


#-----------  DEFAULTS  ---------------------------
O	= o
RM	= rm -f
CP	= cp
STRIP	= strip
OPT	= -g
IOPT	= -O
OUT	= -o
DEST	= $(G960BASE)/bin
SLASH	= /
LINKC   = $(CC) $(OPT) $(LDFLAGS)
ROMIT   = echo 

#		Uncomment for gcc960
#__gcc960__##
#__gcc960__## To test cvt960 as a 960 application, first build it: First,
#__gcc960__## compile toolib and libld960.  There is a gcc960 HOST in
#__gcc960__## their Makefiles.  
#__gcc960__## Make a symlink in the libld960 directory to point to the 
#__gcc960__## toolib.a you built.
#__gcc960__## 
#__gcc960__## Now, build cvt960, using the commands:
#__gcc960__## make make HOST=gcc960 
#__gcc960__## mkdir pdb 
#__gcc960__## make OPT=-O4_1 LDIR=the_dir_where_you_built_libld960
#__gcc960__##
#__gcc960__## To test it, goto the ats depth suite, cvt960 subsuite and make a workspace.
#__gcc960__## Hook up a epcx board with mon960 on it to a host that gdb960 supports,
#__gcc960__## and download cvt960 to the epcx board with gdb960.  Quit gdb960 and make 
#__gcc960__## an environment file for this host in your workspace.  The usual 
#__gcc960__## definitions will hold, but make the following change:
#__gcc960__##
#__gcc960__##      DTCVT="$DTCWD/pauls_cvt960";export DTCVT	
#__gcc960__##
#__gcc960__## This is a script that will run cvt960 on the epcx board using gdb960. 
#__gcc960__## Set the environment variable DTGCCTEST to anything and run the
#__gcc960__## test suite in the usual manner, diagnoising failures.
#__gcc960__##
#__gcc960__#OMFFLAG  = -Fcoff
#__gcc960__#TARGET   = epcx
#__gcc960__#CC       = gcc960 $(OMFFLAG) -Tm$(TARGET) -fsigned-char -mic-compat -Z pdb
#__gcc960__#LD       = gld960 $(OMFFLAG)
#__gcc960__#LINKC    = $(LD) -ACA gcc960$(TARGET).ld -c -lmg -lromg -lhg -lqfg -Z pdb
#__gcc960__#ROMIT    = rom960 gcc960$(TARGET)
#__gcc960__#HOSTDEFS = -D__GCC960 -UNEED_MEMORY_H
#__gcc960__#MEMORY_H =
#__gcc960__#AR       = gar960 cvr $@ $(LIBOBJS)
#__gcc960__#ROMIT    = rom960 gcc960$(TARGET)
#-----------------------------------------------------------------------------
#		Uncomment for i386 System V
#__i386v__#HOSTDEFS	= -DUSG -DSYSV -DUNIX
#-----------------------------------------------------------------------------
#		Uncomment for i386 System V release 4
#__i386vr4__#HOSTDEFS	= -DUSG -DSYSV -DUNIX
#-----------------------------------------------------------------------------
#		Uncomment for NCR System V
#__68020v__#HOSTDEFS	= -DUSG -DSYSV -DUNIX
#-----------------------------------------------------------------------------
#		Uncomment for HP9000-300
#__hp9000__#HOSTDEFS	= -DUSG -DSYSV -DUNIX
#-----------------------------------------------------------------------------
#		Uncomment for HP9000-700
#__hp700__#HOSTDEFS	= -DUSG -DSYSV -DUNIX
#-----------------------------------------------------------------------------
#		Uncomment for Apollo 400
#__ap400__#HOSTDEFS	= -A nansi -DAPOLLO400
#-----------------------------------------------------------------------------
#		Uncomment for IBM RS/6000
#__rs6000__#HOSTDEFS	= -DUSG -DPOSIX -qchars=signed -DSYSV -D_ALL_SOURCE -DUNIX
#__rs6000__#LDFLAGS	= -b nodelcsect
#-----------------------------------------------------------------------------
#		Uncomment for Sun 3
#__sun3__#HOSTDEFS	= -DCVT960 -DUNIX
#__sun3__#LDFLAGS	= -Bstatic
#-----------------------------------------------------------------------------
#		Uncomment for Sun 386i
#__sun386i__#HOSTDEFS	= -DCVT960 -DUNIX
#__sun386i__#LDFLAGS	= -Bstatic
#-----------------------------------------------------------------------------
#		Uncomment for Sun 4
#__sun4__#HOSTDEFS	= -DCVT960 -DUNIX -DSYSV
#__sun4__#LDFLAGS	= -Bstatic
#-----------------------------------------------------------------------------
#		Uncomment for Solaris on the sun4 (sol-sun4).
#__sol-sun4__#HOSTDEFS  = -DUSG -DSYSV -DUNIX -DSOLARIS
#__sol-sun4__#LDFLAGS	= -Bstatic
#-----------------------------------------------------------------------------
#		Uncomment for DOS
#__dos__#CC		= hc386
#__dos__#O		= obj
#__dos__#EXE		= .exe
#__dos__#EXP		= .exp
#__dos__#RM		= del
#__dos__#CP		= copy
#__dos__#LN		= copy
#__dos__#STRIP		= echo	# no-op
#__dos__#HOSTDEFS	= -DHOST_SYS=DOS_SYS -DDOS -DUSG -DMSDOS -DCVT960 -DMWC
#__dos__#OPT		= -g
#__dos__#IOPT		= -O3
#__dos__#CFLAGS		= -w1 -fsoft -Heol=10 $(OPT) -I$(IDIR) $(HOSTDEFS) -DCVT960
#__dos__#LDFLAGS	= "-stack 20000h" "-maxreal 0ffffh" -twocase -fsoft -nomap -nostub
#__dos__#OUT		= -e
#__dos__#DEST		= $(G960BASE,/=\)\bin
#__dos__#I_DIR		= $(IDIR,/=\)
#__dos__#SLASH		= \\
#__dos__#DOSXP		= c:\tnt
#__dos__#DOSXN		= $(DOSXP)\bin\gotnt.exe
#__dos__#CFIG           = $(DOSXP)\bin\cfig386
#__dos__#CFIGFLAGS      = -saveregs -maxvcpimem 0 -vmfile vmmdrv.exp
#-----------------------------------------------------------------------------
#		Uncomment for Windows 95
#__win95__#CC		= CL
#__win95__#O		= obj
#__win95__#EXE		= .exe
#__win95__#LN		= copy
#__win95__#STRIP		= echo	# no-op
#__win95__#HOSTDEFS	= -W2 -DWIN95 -DHOST_SYS=DOS_SYS -DDOS -DUSG -DMSDOS -DCVT960 -DMWC
#__win95__#OPT		= -Zi
#__win95__#IOPT		= -O2
#__win95__#OUT		= -o
#__win95__#DEST		= $(G960BASE,/=\)\bin
#__win95__#I_DIR		= $(IDIR,/=\)
#__win95__#SLASH		= \\
#-----------------------------------------------------------------------------

OBJS	= cvt960.$O 695_out.$O ver960.$O error.$O fsame.$O
LIBS	= $(LDIR)/libld960.a $(LDIR)/toolib.a
#__dos__#LIBS	= $(LDIR)/libld960.lib $(LDIR)/toolib.lib
#__win95__#LIBS	= $(LDIR)/libld960.lib $(LDIR)/toolib.lib

$(TARG): hc.pro objlist.rf $(HP_H) $(HP_C) $(OBJS) $(LIBS)
#__dos__#	!if $(HOST) == dos
#__dos__#		$(CC) $(OPT) $(OUT) $(TARG) $(LDFLAGS) @objlist.rf
#__dos__#		copy /b $(DOSXN)+$(TARG)$(EXP) $(TARG)$(EXE)
#__dos__#       $(CFIG) $(TARG) $(CFIGFLAGS)
#__dos__#	!else
		$(LINKC) $(OUT) $(TARG) $(OBJS) $(LIBS)
		$(ROMIT) $(TARG)
#__dos__#	!endif

#-----------------------------------------------------------------------------
#		'STANDARD' GNU/960 TARGETS BELOW THIS POINT
#-----------------------------------------------------------------------------

ver960.o: FORCE
	$(RM) ver960.c
	echo static char gnu960_ver[]=	 		 > ver960.c
	echo "\"Intel 80960 COFF to IEEE-695 Converter `cat _version`, `date`\";" >> ver960.c
	echo char _version[]=				>> ver960.c
	echo "  \"`cat _version`\";"			>> ver960.c
	echo \#include \"ver960.h\"			>> ver960.c
	$(CC) $(CFLAGS) -c ver960.c

# DOS version
ver960.obj: FORCE
	$(RM) ver960.c
	echo static char gnu960_ver[]=	 	 > ver960.c
	=$(LDIR)/verstr "Intel 80960 COFF to IEEE-695 Converter" _version >> ver960.c
	echo char _version[]=			>> ver960.c
	=$(LDIR)/verstr $(TARG)$(EXE) _version >> ver960.c	
	echo \#include "ver960.h"		>> ver960.c
	$(CC) $(CFLAGS) -c ver960.c

hc.pro:
#__dos__#       $(CP) $(I_DIR)\sys\hc.pro hc.pro
#__win95__#	@echo

objlist.rf:
#__dos__#	!foreach i $(OBJS)
#__dos__#		echo $(i) >>objlist.rf
#__dos__#	!end
#__dos__#	!foreach i $(LIBS)
#__dos__#		echo -l$(i) >> objlist.rf
#__dos__#	!end
#__win95__#	@echo

# Dummy target to force execution of dependent targets.
#
FORCE:


# 'G960BASE' will be defined at invocation
install:
	make $(TARG) LDIR=$(LDIR) OPT="$(IOPT)" DOSXP=$(DOSXP) DOSXN=$(DOSXN)
	-$(STRIP) $(TARG)$(EXE)
	(cd $(DEST); $(RM) $(TARG)$(EXE))
	$(CP) $(TARG)$(EXE) $(DEST)
#__dos__#	(cd $(DEST); $(RM) $(TARG)$(EXP))
#__dos__#	$(CP) $(TARG)$(EXP) $(DEST)

install_ctools: install

# Separate lines required in order for DOS version to work
#
clean:
	$(RM) $(TARG)$(EXE)
	$(RM) *.$O
	$(RM) core
	$(RM) *.rex		# for DOS, doesn't hurt anybody else
	$(RM) *.exp		# for DOS, doesn't hurt anybody else
	$(RM) hc.pro		# for DOS, doesn't hurt anybody else
	$(RM) objlist.rf	# for DOS, doesn't hurt anybody else
#-----------------------------------------------------------------------------
# Target to uncomment host-specific lines in this makefile, i.e. lines
# beginning in column 1 with the following string:  #__<hostname>__# .
# Original Makefile is backed up as 'Makefile.old'.
#
# Invoke with:  make make HOST=xxx
#-----------------------------------------------------------------------------
make:
	-@grep -s "^#The next line was generated by 'make make'" Makefile; \
	if test $$? = 0 ; then	\
		echo "Makefile has already been processed with 'make make'";\
		exit 1; \
	elif test $(HOST)x = x ; then \
		echo 'Specify "make make HOST=???"'; \
		exit 1; \
	else \
		mv -f Makefile Makefile.old; \
		echo "#The next line was generated by 'make make'"> Makefile;\
		echo "HOST=$(HOST)"				 >> Makefile; \
		echo						 >> Makefile; \
		sed "s/^#__$(HOST)__#//" < Makefile.old		 >> Makefile; \
		if test $(HOST) = dos; then mv Makefile makefile; fi \
	fi

cvt960.o:	cvt960.c 695_out.h err_msg.h sgs.h $(IDIR)$(SLASH)ldfcn.h \
		bfio.h

695_out.o:	695_out.c 695_out.h $(IDIR)$(SLASH)coff.h err_msg.h

error.o:	error.c err_msg.h
